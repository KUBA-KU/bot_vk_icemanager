import logging
import time
import re
import threading
from typing import Dict, List, Tuple, Callable, Any, Optional, Union

import database as db
from utils import parse_time, format_time_delta, ROLE_HIERARCHY

logger = logging.getLogger(__name__)

class CommandRegistry:
    # –†–µ–µ—Å—Ç—Ä –∫–æ–º–∞–Ω–¥ –¥–ª—è VK –±–æ—Ç–∞.
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥.
    def __init__(self, bot):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–µ—Å—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# bot: –≠–∫–∑–µ–º–ø–ª—è—Ä VK –±–æ—Ç–∞
        self.bot = bot
        self.commands = {}
        self.register_commands()
        logger.info("Command registry initialized")

    def register_command(self, name: str, handler: Callable, required_role: str = "user"):
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# name: –ò–º—è –∫–æ–º–∞–Ω–¥—ã
# handler: –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã
# required_role: –ù–µ–æ–±—Ö–æ–¥–∏–º–∞—è —Ä–æ–ª—å –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
        self.commands[name] = {
            "handler": handler,
            "required_role": required_role
        }
        logger.info(f"Registered command: {name} (required role: {required_role})")

    def has_command(self, name: str) -> bool:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# name: –ò–º—è –∫–æ–º–∞–Ω–¥—ã
#
# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
# True –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
        return name in self.commands

    def execute_command(self, name: str, peer_id: int, user_id: int, args: str):
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# name: –ò–º—è –∫–æ–º–∞–Ω–¥—ã
# peer_id: ID –±–µ—Å–µ–¥—ã
# user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# args: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        if not self.has_command(name):
            return
            
        command = self.commands[name]
        required_role = command["required_role"]
        
        # Check if user has required role
        if not self.bot.has_rights(peer_id, user_id, required_role):
            self.bot.send_message(
                peer_id, 
                f"‚ùó [id{user_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã."
            )
            return
            
        # Execute command
        try:
            command["handler"](peer_id, user_id, args)
            logger.info(f"Executed command {name} with args: {args}")
        except Exception as e:
            logger.error(f"Error executing command {name}: {str(e)}", exc_info=True)
            self.bot.send_message(
                peer_id, 
                f"‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(e)}"
            )

    def register_commands(self):
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞.
        # –ö–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.register_command("help", self.cmd_help)
        self.register_command("start", self.cmd_start, "user")
        self.register_command("stats", self.cmd_stats)
        self.register_command("getid", self.cmd_getid)
        
        # –ö–æ–º–∞–Ω–¥—ã –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
        self.register_command("chek", self.cmd_chek, "moderator")
        self.register_command("setnick", self.cmd_setnick, "moderator")
        self.register_command("removenick", self.cmd_removenick, "moderator")
        self.register_command("getnick", self.cmd_getnick, "moderator")
        self.register_command("getacc", self.cmd_getacc, "moderator")
        self.register_command("nlist", self.cmd_nlist, "moderator")
        self.register_command("nonick", self.cmd_nonick, "moderator")
        self.register_command("kick", self.cmd_kick, "moderator")
        self.register_command("warn", self.cmd_warn, "moderator")
        self.register_command("unwarn", self.cmd_unwarn, "moderator")
        self.register_command("getwarn", self.cmd_getwarn, "moderator")
        self.register_command("warnhistory", self.cmd_warnhistory, "moderator")
        self.register_command("warnlist", self.cmd_warnlist, "moderator")
        self.register_command("staff", self.cmd_staff, "moderator")
        self.register_command("reg", self.cmd_reg, "moderator")
        self.register_command("mute", self.cmd_mute, "moderator")
        self.register_command("unmute", self.cmd_unmute, "moderator")
        self.register_command("getmute", self.cmd_getmute, "moderator")
        self.register_command("mutelist", self.cmd_mutelist, "moderator")
        self.register_command("clear", self.cmd_clear, "moderator")
        self.register_command("getban", self.cmd_getban, "moderator")
        self.register_command("delete", self.cmd_delete, "moderator")
        
        # –ö–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ä—à–µ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
        self.register_command("ban", self.cmd_ban, "senior_moderator")
        self.register_command("unban", self.cmd_unban, "senior_moderator")
        self.register_command("addmoder", self.cmd_addmoder, "senior_moderator")
        self.register_command("removerole", self.cmd_removerole, "senior_moderator")
        self.register_command("zov", self.cmd_zov, "senior_moderator")
        self.register_command("online", self.cmd_online, "senior_moderator")
        self.register_command("onlinelist", self.cmd_onlinelist, "senior_moderator")
        self.register_command("banlist", self.cmd_banlist, "senior_moderator")
        self.register_command("inactivelist", self.cmd_inactivelist, "senior_moderator")
        self.register_command("masskick", self.cmd_masskick, "senior_moderator")
        
        # –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        # –ö–æ–º–∞–Ω–¥–∞ quiet –¥–æ—Å—Ç—É–ø–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –∏ —Å–æ–∑–¥–∞—Ç–µ–ª—è–º (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–∫–∂–µ –≤ —Å–∞–º–æ–π –∫–æ–º–∞–Ω–¥–µ)
        self.register_command("quiet", self.cmd_quiet, "admin")
        self.register_command("addsenmoder", self.cmd_addsenmoder, "admin")
        
        # –ö–æ–º–∞–Ω–¥—ã —Å–æ–∑–¥–∞—Ç–µ–ª—è
        self.register_command("addadmin", self.cmd_addadmin, "creator")
        self.register_command("removeadmin", self.cmd_removeadmin, "creator")

    # ===================== Command Handlers =====================

    def cmd_help(self, peer_id: int, user_id: int, args: str):
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–∞–Ω–¥–∞—Ö.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# peer_id: ID –±–µ—Å–µ–¥—ã
# user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# args: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_role = db.get_role(user_id, peer_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API
        try:
            user_info = self.bot.vk.users.get(user_ids=user_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            user_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            
        header = f"üåü –ö–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è [id{user_id}|{user_name}] üåü\n\n"
        
        user_cmds = (
            "üë§ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "‚Ä¢ /help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
            "‚Ä¢ /start ‚Äî –∞–∫—Ç–∏–≤–∞—Ü–∏—è –±–æ—Ç–∞\n"
            "‚Ä¢ /stats ‚Äî –ª–∏—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
            "‚Ä¢ /getid ‚Äî —É–∑–Ω–∞—Ç—å —Å–≤–æ–π ID\n\n"
        )
        
        usage_note = (
            "üìå –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –≤–º–µ—Å—Ç–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–æ–∂–Ω–æ:\n"
            "‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            "‚Ä¢ –£–ø–æ–º–∏–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ @username\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ [id123456|–ò–º—è]\n"
            "‚Ä¢ –£–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å vk.com/id123456\n\n"
        )
        
        moder_cmds = (
            "üëÆ –ö–æ–º–∞–Ω–¥—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏:\n"
            "‚Ä¢ /kick @user ‚Äî –∫–∏–∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞\n"
            "‚Ä¢ /warn @user –ø—Ä–∏—á–∏–Ω–∞ ‚Äî –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\n"
            "‚Ä¢ /unwarn @user ‚Äî —Å–Ω—è—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\n"
            "‚Ä¢ /getwarn @user ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è\n"
            "‚Ä¢ /mute @user –≤—Ä–µ–º—è –ø—Ä–∏—á–∏–Ω–∞ ‚Äî –≤—ã–¥–∞—Ç—å –º—É—Ç\n"
            "‚Ä¢ /unmute @user ‚Äî —Å–Ω—è—Ç—å –º—É—Ç\n"
            "‚Ä¢ /getmute @user ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º—É—Ç\n"
            "‚Ä¢ /clear —á–∏—Å–ª–æ ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è\n"
            "‚Ä¢ /delete ID ‚Äî —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
            
            "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ—Å–µ–¥–æ–π:\n"
            "‚Ä¢ /setnick @user –Ω–∏–∫ ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º\n"
            "‚Ä¢ /removenick @user ‚Äî —É–¥–∞–ª–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º\n"
            "‚Ä¢ /getnick @user ‚Äî –ø–æ–ª—É—á–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º\n"
            "‚Ä¢ /getacc –Ω–∏–∫ ‚Äî –Ω–∞–π—Ç–∏ –ø–æ –Ω–∏–∫–Ω–µ–π–º—É\n"
            "‚Ä¢ /staff ‚Äî —Å–ø–∏—Å–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞\n"
            "‚Ä¢ /nlist ‚Äî —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å –Ω–∏–∫–Ω–µ–π–º–∞–º–∏\n"
            "‚Ä¢ /chek @user ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É\n"
            "‚Ä¢ /getban @user ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–Ω–µ\n"
            "‚Ä¢ /reg @user ‚Äî –¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n\n"
        )
        
        senmoder_cmds = (
            "‚≠ê –ö–æ–º–∞–Ω–¥—ã —Å—Ç. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:\n"
            "‚Ä¢ /ban @user –ø—Ä–∏—á–∏–Ω–∞ ‚Äî –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            "‚Ä¢ /unban @user ‚Äî —Ä–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            "‚Ä¢ /addmoder @user ‚Äî –Ω–∞–∑–Ω–∞—á–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º\n"
            "‚Ä¢ /removerole @user ‚Äî —Å–Ω—è—Ç—å —Ä–æ–ª—å\n"
            "‚Ä¢ /zov –ø—Ä–∏—á–∏–Ω–∞ ‚Äî –ø–æ–∑–≤–∞—Ç—å –≤—Å–µ—Ö\n"
            "‚Ä¢ /online ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –æ–Ω–ª–∞–π–Ω\n"
            "‚Ä¢ /onlinelist ‚Äî —Å–ø–∏—Å–æ–∫ –æ–Ω–ª–∞–π–Ω\n"
            "‚Ä¢ /banlist ‚Äî —Å–ø–∏—Å–æ–∫ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö\n"
            "‚Ä¢ /inactivelist –¥–Ω–∏ ‚Äî –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏\n"
            "‚Ä¢ /masskick ID1 ID2 ‚Äî –º–∞—Å—Å–æ–≤—ã–π –∫–∏–∫\n\n"
        )
        
        admin_cmds = (
            "üëë –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n"
            "‚Ä¢ /quiet ‚Äî —Ä–µ–∂–∏–º —Ç–∏—à–∏–Ω—ã\n"
            "‚Ä¢ /addsenmoder @user ‚Äî –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Å—Ç. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º\n\n"
        )
        
        creator_cmds = (
            "üî± –ö–æ–º–∞–Ω–¥—ã —Å–æ–∑–¥–∞—Ç–µ–ª—è:\n"
            "‚Ä¢ /addadmin @user ‚Äî –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n"
            "‚Ä¢ /removeadmin @user ‚Äî —Å–Ω—è—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n"
        )
        
        # –°–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        msg = header + user_cmds
        
        if ROLE_HIERARCHY.get(user_role, 0) >= ROLE_HIERARCHY.get("moderator", 0):
            msg += usage_note + moder_cmds
            
        if ROLE_HIERARCHY.get(user_role, 0) >= ROLE_HIERARCHY.get("senior_moderator", 0):
            msg += senmoder_cmds
            
        if ROLE_HIERARCHY.get(user_role, 0) >= ROLE_HIERARCHY.get("admin", 0):
            msg += admin_cmds
            
        if ROLE_HIERARCHY.get(user_role, 0) >= ROLE_HIERARCHY.get("creator", 0):
            msg += creator_cmds
        
        self.bot.send_message(peer_id, msg)
        
    def _get_role_name(self, role: str, with_emoji: bool = True) -> str:
        # –ü–æ–ª—É—á–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# role: –ö–æ–¥ —Ä–æ–ª–∏
# with_emoji: –í–∫–ª—é—á–∞—Ç—å –ª–∏ —ç–º–æ–¥–∑–∏ –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ
#
# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
# –ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏
        role_emojis = {
            "creator": "üî±",
            "admin": "üëë",
            "senior_moderator": "‚≠ê",
            "moderator": "üëÆ",
            "user": "üë§"
        }
        
        role_names = {
            "creator": "–°–æ–∑–¥–∞—Ç–µ–ª—å",
            "admin": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
            "senior_moderator": "–°—Ç–∞—Ä—à–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä",
            "moderator": "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
            "user": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        }
        
        emoji = role_emojis.get(role, "üë§") + " " if with_emoji else ""
        name = role_names.get(role, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        
        return f"{emoji}{name}"

    def cmd_start(self, peer_id: int, user_id: int, args: str):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –≤ –±–µ—Å–µ–¥–µ.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# peer_id: ID –±–µ—Å–µ–¥—ã
# user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# args: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        is_owner = self.bot.is_conversation_owner(peer_id, user_id)
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ª–∏ –±–æ—Ç —É–∂–µ –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ
        conversation_staff = db.get_staff(peer_id)
        if conversation_staff:
            # –ë–æ—Ç —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω
            self.bot.send_message(
                peer_id, 
                "üîî –ë–æ—Ç —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ!\n\n"
                "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /staff\n"
                "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help"
            )
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∞–≤–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±–æ—Ç–∞
        if is_owner or self.bot.check_access(user_id, "creator"):
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ - –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –±–æ—Ç–∞
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –≤–ª–∞–¥–µ–ª–µ—Ü –±–µ—Å–µ–¥—ã, –¥–µ–ª–∞–µ–º –µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞ –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ
            try:
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                user_info = self.bot.vk.users.get(user_ids=user_id, fields='first_name,last_name')[0]
                user_name = f"{user_info['first_name']} {user_info['last_name']}"
            except:
                user_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
                
            if is_owner:
                db.set_role(user_id, "creator", peer_id)
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
                self.bot.send_message(
                    peer_id, 
                    f"üéâ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ!\n\n"
                    f"üëë [id{user_id}|{user_name}] –Ω–∞–∑–Ω–∞—á–µ–Ω —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞ –∫–∞–∫ –≤–ª–∞–¥–µ–ª–µ—Ü –±–µ—Å–µ–¥—ã.\n\n"
                    f"üìã –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
                )
                
                # –õ–æ–≥–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é –±–æ—Ç–∞
                self.bot.send_log_message(
                    action="start",
                    admin_id=user_id,
                    peer_id=peer_id,
                    details="–í–ª–∞–¥–µ–ª–µ—Ü –±–µ—Å–µ–¥—ã –Ω–∞–∑–Ω–∞—á–µ–Ω —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞"
                )
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
                self.bot.send_message(
                    peer_id, 
                    f"üéâ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ!\n\n"
                    f"üìã –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
                )
                
                # –õ–æ–≥–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é –±–æ—Ç–∞
                self.bot.send_log_message(
                    action="start",
                    admin_id=user_id,
                    peer_id=peer_id,
                    details="–ê–∫—Ç–∏–≤–∞—Ü–∏—è –±–æ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"
                )
        else:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏–º–µ–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø—Ä–∞–≤
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API
            try:
                user_info = self.bot.vk.users.get(user_ids=user_id, fields='first_name,last_name')[0]
                user_name = f"{user_info['first_name']} {user_info['last_name']}"
            except:
                user_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
                
            self.bot.send_message(
                peer_id, 
                f"‚õî [id{user_id}|{user_name}], –∞–∫—Ç–∏–≤–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å!\n\n"
                f"‚ùóÔ∏è –£ –±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –±–µ—Å–µ–¥–µ.\n\n"
                f"üëë –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–µ—Å–µ–¥—ã –Ω–∞–∑–Ω–∞—á–∏—Ç—å –±–æ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏ –∑–∞—Ç–µ–º –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start —Å–Ω–æ–≤–∞."
            )

    def cmd_stats(self, peer_id: int, user_id: int, args: str):
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# peer_id: ID –±–µ—Å–µ–¥—ã
# user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# args: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∫–∞–∑–∞–Ω –ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö
        target_id = user_id  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–ø—Ä–æ—Å–∏–≤—à–µ–≥–æ
        if args:
            extracted_id = self.bot.extract_user_id_from_mention(args)
            if extracted_id:
                target_id = extracted_id
            else:
                self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ ID.")
                return
        
        user = db.get_user(target_id)
        if user:
            reg_date = time.strftime('%d.%m.%Y –≤ %H:%M', time.localtime(user["reg_date"]))
            
            # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –≤ —Ç–µ–∫—É—â–µ–π –±–µ—Å–µ–¥–µ
            peer_role = db.get_role(target_id, peer_id)
            
            # –ü–æ–ª—É—á–∞–µ–º —ç–º–æ–¥–∑–∏ —Ä–æ–ª–∏
            role_emoji = self._get_role_name(peer_role).split(' ')[0]
            
            # –ü–æ–ª—É—á–∞–µ–º —Ä—É—Å—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏
            role_name = self._get_role_name(peer_role, with_emoji=False)
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API –≤–∫–ª—é—á–∞—è –¥–∞—Ç—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (date)
            try:
                user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
                user_name = f"{user_info['first_name']} {user_info['last_name']}"
                
                # –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(e)}")
                user_name = user['nickname'] or f"ID: {target_id}"

            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            msg = (
                f"üìä –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id{user['user_id']}|{user_name}]\n\n"
                f"üÜî ID: {user['user_id']}\n"
                f"üë§ –ù–∏–∫–Ω–µ–π–º: {user['nickname'] or '‚ö†Ô∏è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}\n"
                f"{role_emoji} –†–æ–ª—å: {role_name}\n"
                f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–π: {user['messages_count']}\n"
                f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {user['warns']}/3\n"
                f"üïí –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –±–æ—Ç–µ: {reg_date}"
            )
            self.bot.send_message(peer_id, msg)
        else:
            try:
                user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
                user_name = f"{user_info['first_name']} {user_info['last_name']}"
                self.bot.send_message(peer_id, f"‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id{target_id}|{user_name}] –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ.")
            except:
                self.bot.send_message(peer_id, f"‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: {target_id} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ.")

    def cmd_getid(self, peer_id: int, user_id: int, args: str):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# peer_id: ID –±–µ—Å–µ–¥—ã
# user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# args: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        self.bot.send_message(peer_id, f"üìå –í–∞—à ID: {user_id}")
        
    def cmd_chek(self, peer_id: int, user_id: int, args: str):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# peer_id: ID –±–µ—Å–µ–¥—ã
# user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# args: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã (ID –ø—Ä–æ–≤–µ—Ä—è–µ–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return
        
        try:
            target_id = int(args.strip())
        except ValueError:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return
        
        ban = db.get_ban(target_id)
        if ban:
            ban_time = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(ban["ban_timestamp"]))
            self.bot.send_message(
                peer_id, 
                f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}] –∑–∞–±–∞–Ω–µ–Ω\n\n"
                f"üìã –ü—Ä–∏—á–∏–Ω–∞: {ban['reason']}\n"
                f"‚è± –í—Ä–µ–º—è –±–∞–Ω–∞: {ban_time}"
            )
        else:
            self.bot.send_message(peer_id, f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}] –Ω–µ –∏–º–µ–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–∞–Ω–æ–≤.")

    def cmd_setnick(self, peer_id: int, user_id: int, args: str):
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∏–∫–Ω–µ–π–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# peer_id: ID –±–µ—Å–µ–¥—ã
# user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# args: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã (ID —Ü–µ–ª–µ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∏–∫–Ω–µ–π–º)
        if not args or ' ' not in args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∏–∫–Ω–µ–π–º.")
            return
        
        try:
            target_id, nickname = args.strip().split(' ', 1)
            target_id = int(target_id)
        except ValueError:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return
        
        # Make sure user exists in database
        db.add_user(target_id)
        
        if db.set_nickname(target_id, nickname):
            self.bot.send_message(
                peer_id, 
                f"‚úÖ –ù–∏–∫–Ω–µ–π–º —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: [id{target_id}]\n"
                f"üìù –ù–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º: {nickname}"
            )
        else:
            self.bot.send_message(peer_id, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id{target_id}].")

    def cmd_removenick(self, peer_id: int, user_id: int, args: str):
        # Remove nickname from a user.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (target user ID)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return
        
        try:
            target_id = int(args.strip())
        except ValueError:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return
        
        if db.remove_nickname(target_id):
            self.bot.send_message(peer_id, f"–ù–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id{target_id}] —É–¥–∞–ª–µ–Ω.")
        else:
            self.bot.send_message(peer_id, f"‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id{target_id}].")

    def cmd_getnick(self, peer_id: int, user_id: int, args: str):
        # Get nickname of a user.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (target user ID)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return
        
        try:
            target_id = int(args.strip())
        except ValueError:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return
        
        user = db.get_user(target_id)
        if user and user["nickname"]:
            self.bot.send_message(peer_id, f"–ù–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id{target_id}]: {user['nickname']}")
        else:
            self.bot.send_message(peer_id, f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id{target_id}] –Ω–µ—Ç –Ω–∏–∫–Ω–µ–π–º–∞.")

    def cmd_getacc(self, peer_id: int, user_id: int, args: str):
        # Find user by nickname.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (nickname)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –¥–ª—è –ø–æ–∏—Å–∫–∞.")
            return
        
        nickname = args.strip()
        users = db.find_user_by_nickname(nickname)
        
        if users:
            msg = f"üë• –ù–∞–π–¥–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –Ω–∏–∫–Ω–µ–π–º–æ–º '{nickname}':\n\n"
            for user in users:
                role_name = self._get_role_name(user['role'], with_emoji=False)
                msg += f"‚Ä¢ [id{user['user_id']}|{user['nickname']}] ‚Äî {role_name}\n"
            self.bot.send_message(peer_id, msg)
        else:
            self.bot.send_message(peer_id, f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –Ω–∏–∫–Ω–µ–π–º–æ–º '{nickname}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

    def cmd_nlist(self, peer_id: int, user_id: int, args: str):
        # List users with nicknames.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments
        users = db.get_users_with_nicknames()
        
        if users:
            msg = "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –Ω–∏–∫–Ω–µ–π–º–∞–º–∏:\n\n"
            for user in users:
                role_name = self._get_role_name(user['role'], with_emoji=False)
                msg += f"‚Ä¢ [id{user['user_id']}|{user['nickname']}] ‚Äî {role_name}\n"
            self.bot.send_message(peer_id, msg)
        else:
            self.bot.send_message(peer_id, "‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –Ω–∏–∫–Ω–µ–π–º–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

    def cmd_nonick(self, peer_id: int, user_id: int, args: str):
        # List users without nicknames.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments
        users = db.get_users_without_nicknames()
        
        if users:
            msg = "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–µ–∑ –Ω–∏–∫–Ω–µ–π–º–æ–≤:\n\n"
            for user in users:
                role_name = self._get_role_name(user['role'], with_emoji=False)
                # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ VK API
                try:
                    user_info = self.bot.vk.users.get(user_ids=user['user_id'], fields='first_name,last_name')[0]
                    user_name = f"{user_info['first_name']} {user_info['last_name']}"
                except:
                    user_name = f"ID: {user['user_id']}"
                    
                msg += f"‚Ä¢ [id{user['user_id']}|{user_name}] ‚Äî {role_name}\n"
            self.bot.send_message(peer_id, msg)
        else:
            self.bot.send_message(peer_id, "‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–º–µ—é—Ç –Ω–∏–∫–Ω–µ–π–º—ã.")

    def cmd_kick(self, peer_id: int, user_id: int, args: str):
        # –ò—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–µ—Å–µ–¥—ã.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# peer_id: ID –±–µ—Å–µ–¥—ã
# user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# args: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã (ID/—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ/—Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É) –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è.")
            return
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ –ø—Ä–æ–±–µ–ª–∞) –¥–ª—è –ø–æ–∏—Å–∫–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        parts = args.strip().split(' ', 1)
        user_identifier = parts[0]
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
        target_id = self.bot.extract_user_id_from_mention(user_identifier)
        
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø–æ –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏, –ø—Ä–æ–±—É–µ–º –ø–æ –≤—Å–µ–π —Å—Ç—Ä–æ–∫–µ
        if not target_id:
            target_id = self.bot.extract_user_id_from_mention(args)
            
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API
        try:
            user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            user_name = f"ID: {target_id}"
            
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–µ
        try:
            admin_info = self.bot.vk.users.get(user_ids=user_id, fields='first_name,last_name')[0]
            admin_name = f"{admin_info['first_name']} {admin_info['last_name']}"
        except:
            admin_name = f"ID: {user_id}"
        
        # Check if target is staff member
        if self.bot.check_access(target_id, "moderator") and not self.bot.check_access(user_id, "admin"):
            self.bot.send_message(peer_id, f"‚ùó –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–∫–ª—é—á–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ [id{target_id}|{user_name}].")
            return
        
        success = self.bot.kick_user(peer_id, target_id)
        if success:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
            self.bot.send_message(
                peer_id, 
                f"üö™ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–∫–ª—é—á–µ–Ω\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: [id{target_id}|{user_name}]\n"
                f"üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: [id{user_id}|{admin_name}]"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –±–µ—Å–µ–¥—É
            self.bot.send_log_message(
                action="kick",
                admin_id=user_id,
                target_id=target_id,
                peer_id=peer_id,
                details="–ò—Å–∫–ª—é—á–µ–Ω –∏–∑ –±–µ—Å–µ–¥—ã"
            )
        else:
            self.bot.send_message(peer_id, f"‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id{target_id}|{user_name}].")

    def cmd_warn(self, peer_id: int, user_id: int, args: str):
        # –í—ã–¥–∞—á–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# peer_id: ID –±–µ—Å–µ–¥—ã
# user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# args: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã (—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ/ID/—Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–∏—á–∏–Ω–∞)
        if not args or ' ' not in args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É) –∏ –ø—Ä–∏—á–∏–Ω—É –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.")
            return
        
        # –†–∞–∑–¥–µ–ª—è–µ–º –≤–≤–æ–¥ –Ω–∞ –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å (–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) –∏ –æ—Å—Ç–∞–ª—å–Ω–æ–µ (–ø—Ä–∏—á–∏–Ω–∞)
        parts = args.strip().split(' ', 1)
        user_identifier = parts[0]
        reason = parts[1] if len(parts) > 1 else "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
        
        # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å ID –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ (—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, —Å—Å—ã–ª–∫–∞, ID)
        target_id = self.bot.extract_user_id_from_mention(user_identifier)
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
        
        # Check if target is staff member
        if self.bot.check_access(target_id, "moderator") and not self.bot.check_access(user_id, "admin"):
            self.bot.send_message(peer_id, "‚õî –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É.")
            return
        
        # Make sure user exists in database
        db.add_user(target_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        try:
            user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            user_name = f"ID: {target_id}"
            
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫—Ç–æ –≤—ã–¥–∞–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        try:
            admin_info = self.bot.vk.users.get(user_ids=user_id, fields='first_name,last_name')[0]
            admin_name = f"{admin_info['first_name']} {admin_info['last_name']}"
        except:
            admin_name = f"ID: {user_id}"
            
        warn_count = db.add_warn(target_id, reason)
        self.bot.send_message(
            peer_id, 
            f"‚ö†Ô∏è –í—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: [id{target_id}|{user_name}]\n"
            f"üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: [id{user_id}|{admin_name}]\n"
            f"üìã –ü—Ä–∏—á–∏–Ω–∞: {reason}\n"
            f"üî¢ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: {warn_count}/3"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –æ –≤—ã–¥–∞—á–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        self.bot.send_log_message(
            action="warn",
            admin_id=user_id,
            target_id=target_id,
            peer_id=peer_id,
            details=f"–ü—Ä–∏—á–∏–Ω–∞: {reason} (–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ {warn_count}/3)"
        )
        
        # Auto-ban if warn count exceeds threshold
        if warn_count >= 3:
            db.ban_user(target_id, f"–ê–≤—Ç–æ–±–∞–Ω: –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π ({warn_count})")
            self.bot.send_message(
                peer_id, 
                f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}|{user_name}] –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∞–Ω–µ–Ω\n"
                f"üìå –ü—Ä–∏—á–∏–Ω–∞: –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π ({warn_count}/3)"
            )
            
            # Try to kick user from chat
            self.bot.kick_user(peer_id, target_id)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –æ –∞–≤—Ç–æ–±–∞–Ω–µ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –±–µ—Å–µ–¥—É
            self.bot.send_log_message(
                action="ban",
                admin_id=user_id,  # –§–æ—Ä–º–∞–ª—å–Ω–æ –±–∞–Ω–Ω–∏—Ç —Ç–æ—Ç –∂–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä
                target_id=target_id,
                peer_id=peer_id,
                details=f"–ê–≤—Ç–æ–±–∞–Ω: –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π ({warn_count}/3)"
            )

    def cmd_unwarn(self, peer_id: int, user_id: int, args: str):
        # –°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# peer_id: ID –±–µ—Å–µ–¥—ã
# user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# args: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã (—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ/ID/—Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É).")
            return
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
        target_id = self.bot.extract_user_id_from_mention(args)
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        try:
            user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            user_name = f"ID: {target_id}"
            
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–µ
        try:
            admin_info = self.bot.vk.users.get(user_ids=user_id, fields='first_name,last_name')[0]
            admin_name = f"{admin_info['first_name']} {admin_info['last_name']}"
        except:
            admin_name = f"ID: {user_id}"
            
        warn_count = db.remove_warn(target_id)
        self.bot.send_message(
            peer_id, 
            f"‚úÖ –°–Ω—è—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: [id{target_id}|{user_name}]\n"
            f"üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: [id{user_id}|{admin_name}]\n"
            f"üî¢ –û—Å—Ç–∞–ª–æ—Å—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {warn_count}/3"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –±–µ—Å–µ–¥—É
        self.bot.send_log_message(
            action="unwarn",
            admin_id=user_id,
            target_id=target_id,
            peer_id=peer_id,
            details=f"–û—Å—Ç–∞–ª–æ—Å—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {warn_count}/3"
        )

    def cmd_getwarn(self, peer_id: int, user_id: int, args: str):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# peer_id: ID –±–µ—Å–µ–¥—ã
# user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# args: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã (—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ/ID/—Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É).")
            return
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
        target_id = self.bot.extract_user_id_from_mention(args)
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        try:
            user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            user_name = f"ID: {target_id}"
            
        warn_count = db.get_warns(target_id)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º
        emoji = "‚úÖ" if warn_count == 0 else "‚ö†Ô∏è" 
        status = "—á–∏—Å—Ç" if warn_count == 0 else f"–∏–º–µ–µ—Ç {warn_count} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π"
        
        self.bot.send_message(
            peer_id, 
            f"{emoji} –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: [id{target_id}|{user_name}]\n"
            f"üî¢ –°—Ç–∞—Ç—É—Å: {status}"
        )

    def cmd_warnhistory(self, peer_id: int, user_id: int, args: str):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# peer_id: ID –±–µ—Å–µ–¥—ã
# user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# args: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã (—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ/ID/—Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É).")
            return
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
        target_id = self.bot.extract_user_id_from_mention(args)
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        try:
            user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            user_name = f"ID: {target_id}"
        
        warns = db.get_warn_history(target_id)
        
        if warns:
            msg = f"üìã –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π\n\n"
            msg += f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: [id{target_id}|{user_name}]\n"
            msg += f"üî¢ –í—Å–µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {len(warns)}\n\n"
            
            for i, warn in enumerate(warns, 1):
                warn_time = time.strftime('%d.%m.%Y –≤ %H:%M', time.localtime(warn["timestamp"]))
                msg += f"{i}. {warn_time}\nüìå –ü—Ä–∏—á–∏–Ω–∞: {warn['reason']}\n\n"
                
            self.bot.send_message(peer_id, msg)
        else:
            self.bot.send_message(
                peer_id, 
                f"‚úÖ –ß–∏—Å—Ç–∞—è –∏—Å—Ç–æ—Ä–∏—è\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: [id{target_id}|{user_name}]\n"
                f"üìã –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –Ω–µ—Ç"
            )

    def cmd_warnlist(self, peer_id: int, user_id: int, args: str):
        # List all warnings.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments
        warns = db.get_all_warns()
        
        if warns:
            msg = "–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π:\n"
            for i, warn in enumerate(warns[:20], 1):  # Limit to 20 warnings
                warn_time = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(warn["timestamp"]))
                
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API
                try:
                    user_info = self.bot.vk.users.get(user_ids=warn['user_id'], fields='first_name,last_name')[0]
                    user_name = f"{user_info['first_name']} {user_info['last_name']}"
                except:
                    user_name = warn['nickname'] or f"ID: {warn['user_id']}"
                    
                msg += f"{i}. [id{warn['user_id']}|{user_name}] - {warn_time} - {warn['reason']}\n"
            
            if len(warns) > 20:
                msg += f"\n–ü–æ–∫–∞–∑–∞–Ω–æ 20 –∏–∑ {len(warns)} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π."
                
            self.bot.send_message(peer_id, msg)
        else:
            self.bot.send_message(peer_id, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

    def cmd_staff(self, peer_id: int, user_id: int, args: str):
        # –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –±–µ—Å–µ–¥—ã.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# peer_id: ID –±–µ—Å–µ–¥—ã
# user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# args: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–µ—Å–µ–¥—ã
        staff = db.get_staff(peer_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ –±–µ—Å–µ–¥—ã
        conversation_owner_id = self.bot.get_conversation_owner(peer_id)
        
        msg = "üë• –°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –±–µ—Å–µ–¥—ã\n\n"
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ –±–µ—Å–µ–¥—ã, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        owner_name = None
        if conversation_owner_id:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API
            try:
                owner_info = self.bot.vk.users.get(user_ids=conversation_owner_id, fields='first_name,last_name')[0]
                owner_name = f"{owner_info['first_name']} {owner_info['last_name']}"
            except:
                owner_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            
            msg += f"üëë –°–æ–∑–¥–∞—Ç–µ–ª—å –±–µ—Å–µ–¥—ã:\n‚Ä¢ [id{conversation_owner_id}|{owner_name}]\n\n"
        
        roles = {
            "creator": "üî± –°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞",
            "admin": "üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
            "senior_moderator": "‚≠ê –°—Ç–∞—Ä—à–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä",
            "moderator": "üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä"
        }
        
        if staff:
            for role in ["creator", "admin", "senior_moderator", "moderator"]:
                # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª —Å —Ç–µ–∫—É—â–µ–π —Ä–æ–ª—å—é
                role_staff = [s for s in staff if s["role"] == role]
                
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–µ—Å–µ–¥—ã, –µ—Å–ª–∏ –æ–Ω —É–∂–µ –±—ã–ª –ø–æ–∫–∞–∑–∞–Ω –≤—ã—à–µ
                role_staff = [s for s in role_staff if not (s['user_id'] == conversation_owner_id and role == "creator")]
                
                if role_staff:
                    msg += f"{roles[role]}:\n"
                    for s in role_staff:
                        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API
                        try:
                            user_info = self.bot.vk.users.get(user_ids=s['user_id'], fields='first_name,last_name')[0]
                            user_name = f"{user_info['first_name']} {user_info['last_name']}"
                        except:
                            user_name = s['nickname'] or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
                        
                        msg += f"‚Ä¢ [id{s['user_id']}|{user_name}]\n"
                    msg += "\n"
            
            self.bot.send_message(peer_id, msg)
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –Ω–æ –µ—Å—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—å –±–µ—Å–µ–¥—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ
            if conversation_owner_id:
                self.bot.send_message(peer_id, msg)
            else:
                self.bot.send_message(peer_id, "‚ö†Ô∏è –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ.")

    def cmd_reg(self, peer_id: int, user_id: int, args: str):
        # Get registration date for a user.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (target user ID)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É).")
            return

        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏–ª–∏ —Å—Å—ã–ª–∫–∏
        target_id = self.bot.extract_user_id_from_mention(args)
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API
        try:
            user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –±–æ—Ç–µ
            user = db.get_user(target_id)
            if user:
                bot_reg_date = time.strftime('%d.%m.%Y –≤ %H:%M', time.localtime(user["reg_date"]))
            else:
                bot_reg_date = "–ù–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ"
                
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
            self.bot.send_message(
                peer_id,
                f"üìÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: [id{target_id}|{user_name}]\n"
                f"ü§ñ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –±–æ—Ç–µ: {bot_reg_date}"
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {str(e)}")
            self.bot.send_message(peer_id, f"‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id{target_id}].")

    def cmd_mute(self, peer_id: int, user_id: int, args: str):
        # –û—Ç–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è.
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# peer_id: ID –±–µ—Å–µ–¥—ã
# user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# args: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã (—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ/ID/—Å—Å—ã–ª–∫–∞, –≤—Ä–µ–º—è –º—É—Ç–∞, –ø—Ä–∏—á–∏–Ω–∞)
        args_parts = args.strip().split(' ', 2)
        if len(args_parts) < 3:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É), –≤—Ä–µ–º—è –º—É—Ç–∞ (30m, 2h, 1d) –∏ –ø—Ä–∏—á–∏–Ω—É.")
            return
            
        # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å ID –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ (—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, —Å—Å—ã–ª–∫–∞, ID)
        target_id = self.bot.extract_user_id_from_mention(args_parts[0])
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
            
        duration_str = args_parts[1]
        reason = args_parts[2]
        
        # Check if target is staff member
        if self.bot.check_access(target_id, "moderator") and not self.bot.check_access(user_id, "admin"):
            self.bot.send_message(peer_id, "‚ùó –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–º—å—é—Ç–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.")
            return
        
        # Parse duration
        try:
            duration = parse_time(duration_str)
        except ValueError:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è –º—É—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 30m, 2h, 1d).")
            return
        
        # Make sure user exists in database
        db.add_user(target_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        try:
            user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            user_name = f"ID: {target_id}"
            
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–µ
        try:
            admin_info = self.bot.vk.users.get(user_ids=user_id, fields='first_name,last_name')[0]
            admin_name = f"{admin_info['first_name']} {admin_info['last_name']}"
        except:
            admin_name = f"ID: {user_id}"
            
        # Set mute
        mute_until = db.set_mute(target_id, duration, reason)
        mute_until_str = time.strftime('%d.%m.%Y –≤ %H:%M', time.localtime(mute_until))
        
        self.bot.send_message(
            peer_id, 
            f"üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–º—å—é—á–µ–Ω\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: [id{target_id}|{user_name}]\n"
            f"üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: [id{user_id}|{admin_name}]\n"
            f"üìã –ü—Ä–∏—á–∏–Ω–∞: {reason}\n"
            f"‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {format_time_delta(duration)}\n"
            f"üïí –î–æ: {mute_until_str}"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –±–µ—Å–µ–¥—É
        self.bot.send_log_message(
            action="mute",
            admin_id=user_id,
            target_id=target_id,
            peer_id=peer_id,
            details=f"–ü—Ä–∏—á–∏–Ω–∞: {reason}, –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {format_time_delta(duration)}, –î–æ: {mute_until_str}"
        )

    def cmd_unmute(self, peer_id: int, user_id: int, args: str):
        # Unmute a user.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (target user ID, mention or link)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É).")
            return
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ –ø—Ä–æ–±–µ–ª–∞) –¥–ª—è –ø–æ–∏—Å–∫–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        parts = args.strip().split(' ', 1)
        user_identifier = parts[0]
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
        target_id = self.bot.extract_user_id_from_mention(user_identifier)
        
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø–æ –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏, –ø—Ä–æ–±—É–µ–º –ø–æ –≤—Å–µ–π —Å—Ç—Ä–æ–∫–µ
        if not target_id:
            target_id = self.bot.extract_user_id_from_mention(args)
            
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
        
        success = db.remove_mute(target_id)
        if success:
            self.bot.send_message(peer_id, f"üîä –ú—É—Ç —Å–Ω—è—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id{target_id}].")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –±–µ—Å–µ–¥—É
            self.bot.send_log_message(
                action="unmute",
                admin_id=user_id,
                target_id=target_id,
                peer_id=peer_id,
                details="–°–Ω—è—Ç –º—É—Ç –≤ –±–µ—Å–µ–¥–µ"
            )
        else:
            self.bot.send_message(peer_id, f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}] –Ω–µ –±—ã–ª –≤ –º—É—Ç–µ.")

    def cmd_getmute(self, peer_id: int, user_id: int, args: str):
        # Get mute information for a user.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (target user ID, mention or link)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É).")
            return
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ –ø—Ä–æ–±–µ–ª–∞) –¥–ª—è –ø–æ–∏—Å–∫–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        parts = args.strip().split(' ', 1)
        user_identifier = parts[0]
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
        target_id = self.bot.extract_user_id_from_mention(user_identifier)
        
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø–æ –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏, –ø—Ä–æ–±—É–µ–º –ø–æ –≤—Å–µ–π —Å—Ç—Ä–æ–∫–µ
        if not target_id:
            target_id = self.bot.extract_user_id_from_mention(args)
            
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API
        try:
            user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            user_name = f"ID: {target_id}"
        
        mute_until = db.get_mute(target_id)
        now = int(time.time())
        
        if mute_until > now:
            time_left = mute_until - now
            mute_until_str = time.strftime('%d.%m.%Y –≤ %H:%M', time.localtime(mute_until))
            self.bot.send_message(
                peer_id, 
                f"üîá –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º—É—Ç–µ\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: [id{target_id}|{user_name}]\n"
                f"üïí –î–æ: {mute_until_str}\n"
                f"‚è± –û—Å—Ç–∞–ª–æ—Å—å: {format_time_delta(time_left)}"
            )
        else:
            self.bot.send_message(peer_id, f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}|{user_name}] –Ω–µ –≤ –º—É—Ç–µ.")

    def cmd_mutelist(self, peer_id: int, user_id: int, args: str):
        # List muted users.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments
        muted_users = db.get_muted_users()
        
        if muted_users:
            msg = "üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –º—É—Ç–µ:\n\n"
            now = int(time.time())
            
            for user in muted_users:
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API
                try:
                    user_info = self.bot.vk.users.get(user_ids=user['user_id'], fields='first_name,last_name')[0]
                    user_name = f"{user_info['first_name']} {user_info['last_name']}"
                except:
                    user_name = user['nickname'] or f"ID: {user['user_id']}"
                
                time_left = user["mute_until"] - now
                msg += f"üë§ [id{user['user_id']}|{user_name}] - "
                msg += f"–æ—Å—Ç–∞–ª–æ—Å—å {format_time_delta(time_left)}\n"
            
            self.bot.send_message(peer_id, msg)
        else:
            self.bot.send_message(peer_id, "‚úÖ –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –º—É—Ç–µ.")

    def cmd_clear(self, peer_id: int, user_id: int, args: str):
        # Clear messages.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (number of messages)
        try:
            count = int(args.strip()) if args else 10
            count = min(max(1, count), 50)  # Limit between 1 and 50
        except ValueError:
            count = 10
        
        self.bot.send_message(
            peer_id, 
            f"üîÑ –ù–∞—á–∏–Ω–∞—é –æ—á–∏—Å—Ç–∫—É {count} —Å–æ–æ–±—â–µ–Ω–∏–π..."
        )
        
        try:
            # Get conversation history
            history = self.bot.vk.messages.getHistory(
                peer_id=peer_id,
                count=count + 1  # +1 to include the command itself
            )
            
            # Extract message IDs
            message_ids = [item["id"] for item in history["items"]]
            
            # Delete messages
            if message_ids:
                self.bot.vk.messages.delete(
                    message_ids=message_ids,
                    delete_for_all=True
                )
                
                self.bot.send_message(
                    peer_id, 
                    f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {len(message_ids)} —Å–æ–æ–±—â–µ–Ω–∏–π."
                )
        except Exception as e:
            logger.error(f"Error clearing messages: {str(e)}")
            self.bot.send_message(
                peer_id, 
                f"‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π: {str(e)}"
            )

    def cmd_getban(self, peer_id: int, user_id: int, args: str):
        # Get ban information for a user.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (target user ID, mention or link)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É).")
            return
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ –ø—Ä–æ–±–µ–ª–∞) –¥–ª—è –ø–æ–∏—Å–∫–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        parts = args.strip().split(' ', 1)
        user_identifier = parts[0]
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
        target_id = self.bot.extract_user_id_from_mention(user_identifier)
        
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø–æ –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏, –ø—Ä–æ–±—É–µ–º –ø–æ –≤—Å–µ–π —Å—Ç—Ä–æ–∫–µ
        if not target_id:
            target_id = self.bot.extract_user_id_from_mention(args)
            
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API
        try:
            user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            user_name = f"ID: {target_id}"
        
        ban = db.get_ban(target_id)
        if ban:
            ban_time = time.strftime('%d.%m.%Y –≤ %H:%M', time.localtime(ban["ban_timestamp"]))
            self.bot.send_message(
                peer_id, 
                f"üö´ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: [id{target_id}|{user_name}]\n"
                f"üìã –ü—Ä–∏—á–∏–Ω–∞: {ban['reason']}\n"
                f"‚è± –í—Ä–µ–º—è –±–∞–Ω–∞: {ban_time}"
            )
        else:
            self.bot.send_message(peer_id, f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}|{user_name}] –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")

    def cmd_delete(self, peer_id: int, user_id: int, args: str):
        # Delete a message.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (message ID)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ ID —Å–æ–æ–±—â–µ–Ω–∏—è.")
            return
        
        try:
            message_id = int(args.strip())
        except ValueError:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —Å–æ–æ–±—â–µ–Ω–∏—è.")
            return
        
        if self.bot.delete_message(peer_id, message_id):
            self.bot.send_message(peer_id, f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ {message_id} —É–¥–∞–ª–µ–Ω–æ.")
        else:
            self.bot.send_message(peer_id, f"‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message_id}.")

    def cmd_ban(self, peer_id: int, user_id: int, args: str):
        # Ban a user.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (target user ID/mention/link and reason)
        if not args or ' ' not in args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É) –∏ –ø—Ä–∏—á–∏–Ω—É –±–∞–Ω–∞.")
            return
        
        # –†–∞–∑–¥–µ–ª—è–µ–º –≤–≤–æ–¥ –Ω–∞ –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å (–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) –∏ –æ—Å—Ç–∞–ª—å–Ω–æ–µ (–ø—Ä–∏—á–∏–Ω–∞)
        parts = args.strip().split(' ', 1)
        user_identifier = parts[0]
        reason = parts[1] if len(parts) > 1 else "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
        
        # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å ID –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ (—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, —Å—Å—ã–ª–∫–∞, ID)
        target_id = self.bot.extract_user_id_from_mention(user_identifier)
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API
        try:
            user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            user_name = f"ID: {target_id}"
            
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–µ
        try:
            admin_info = self.bot.vk.users.get(user_ids=user_id, fields='first_name,last_name')[0]
            admin_name = f"{admin_info['first_name']} {admin_info['last_name']}"
        except:
            admin_name = f"ID: {user_id}"
        
        # Check if target is staff member
        if self.bot.check_access(target_id, "moderator") and not self.bot.check_access(user_id, "admin"):
            self.bot.send_message(peer_id, f"‚ùó –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ [id{target_id}|{user_name}].")
            return
        
        # Make sure user exists in database
        db.add_user(target_id)
        
        # Ban user
        if db.ban_user(target_id, reason):
            ban_time = time.strftime('%d.%m.%Y –≤ %H:%M', time.localtime(int(time.time())))
            self.bot.send_message(
                peer_id, 
                f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: [id{target_id}|{user_name}]\n"
                f"üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: [id{user_id}|{admin_name}]\n"
                f"üìã –ü—Ä–∏—á–∏–Ω–∞: {reason}\n"
                f"‚è± –í—Ä–µ–º—è –±–∞–Ω–∞: {ban_time}"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –±–µ—Å–µ–¥—É
            self.bot.send_log_message(
                action="ban",
                admin_id=user_id,
                target_id=target_id,
                peer_id=peer_id,
                details=f"–ü—Ä–∏—á–∏–Ω–∞: {reason}"
            )
            
            # Try to kick user from chat
            self.bot.kick_user(peer_id, target_id)
        else:
            self.bot.send_message(peer_id, f"‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id{target_id}|{user_name}].")

    def cmd_unban(self, peer_id: int, user_id: int, args: str):
        # Unban a user.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (target user ID, mention or link)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É).")
            return
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ –ø—Ä–æ–±–µ–ª–∞) –¥–ª—è –ø–æ–∏—Å–∫–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        parts = args.strip().split(' ', 1)
        user_identifier = parts[0]
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
        target_id = self.bot.extract_user_id_from_mention(user_identifier)
        
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø–æ –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏, –ø—Ä–æ–±—É–µ–º –ø–æ –≤—Å–µ–π —Å—Ç—Ä–æ–∫–µ
        if not target_id:
            target_id = self.bot.extract_user_id_from_mention(args)
            
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API
        try:
            user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            user_name = f"ID: {target_id}"
            
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–µ
        try:
            admin_info = self.bot.vk.users.get(user_ids=user_id, fields='first_name,last_name')[0]
            admin_name = f"{admin_info['first_name']} {admin_info['last_name']}"
        except:
            admin_name = f"ID: {user_id}"
        
        success = db.unban_user(target_id)
        if success:
            self.bot.send_message(
                peer_id,
                f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: [id{target_id}|{user_name}]\n"
                f"üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: [id{user_id}|{admin_name}]\n"
                f"üìù –î–µ–π—Å—Ç–≤–∏–µ: –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ –±–æ—Ç–∞"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –±–µ—Å–µ–¥—É
            self.bot.send_log_message(
                action="unban",
                admin_id=user_id,
                target_id=target_id,
                peer_id=peer_id,
                details="–°–Ω—è—Ç–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
            )
        else:
            self.bot.send_message(peer_id, f"‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}|{user_name}] –Ω–µ –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")

    def cmd_addmoder(self, peer_id: int, user_id: int, args: str):
        # Add moderator role to a user.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (target user ID, mention or link)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É).")
            return
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ –ø—Ä–æ–±–µ–ª–∞) –¥–ª—è –ø–æ–∏—Å–∫–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        parts = args.strip().split(' ', 1)
        user_identifier = parts[0]
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
        target_id = self.bot.extract_user_id_from_mention(user_identifier)
        
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø–æ –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏, –ø—Ä–æ–±—É–µ–º –ø–æ –≤—Å–µ–π —Å—Ç—Ä–æ–∫–µ
        if not target_id:
            target_id = self.bot.extract_user_id_from_mention(args)
            
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
        
        # Make sure user exists in database
        db.add_user(target_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ–Ω–∏
        try:
            user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            user_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–æ–ª—å –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–µ—Å–µ–¥—ã
        success = db.set_role(target_id, "moderator", peer_id)
        if success:
            self.bot.send_message(
                peer_id, 
                f"üëÆ –ù–æ–≤—ã–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä\n\n"
                f"üë§ [id{target_id}|{user_name}] –Ω–∞–∑–Ω–∞—á–µ–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ."
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –±–µ—Å–µ–¥—É
            self.bot.send_log_message(
                action="set_role",
                admin_id=user_id,
                target_id=target_id,
                peer_id=peer_id,
                details="–ù–∞–∑–Ω–∞—á–µ–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º"
            )
        else:
            self.bot.send_message(
                peer_id, 
                f"‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∑–Ω–∞—á–∏—Ç—å [id{target_id}|{user_name}] –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º."
            )

    def cmd_removerole(self, peer_id: int, user_id: int, args: str):
        # Remove role from a user.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (target user ID, mention or link)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É).")
            return
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ –ø—Ä–æ–±–µ–ª–∞) –¥–ª—è –ø–æ–∏—Å–∫–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        parts = args.strip().split(' ', 1)
        user_identifier = parts[0]
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
        target_id = self.bot.extract_user_id_from_mention(user_identifier)
        
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø–æ –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏, –ø—Ä–æ–±—É–µ–º –ø–æ –≤—Å–µ–π —Å—Ç—Ä–æ–∫–µ
        if not target_id:
            target_id = self.bot.extract_user_id_from_mention(args)
            
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ
        target_role = db.get_role(target_id, peer_id)
        if target_role == "user":
            self.bot.send_message(peer_id, f"‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}] –Ω–µ –∏–º–µ–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Ä–æ–ª–∏ –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ.")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä –±–æ–ª–µ–µ –≤—ã—Å–æ–∫—É—é —Ä–æ–ª—å, —á–µ–º —Ü–µ–ª—å
        initiator_role = db.get_role(user_id, peer_id)
        if ROLE_HIERARCHY.get(target_role, 0) >= ROLE_HIERARCHY.get(initiator_role, 0):
            self.bot.send_message(peer_id, "‚ùó –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å —Ä–æ–ª—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–∞—à–µ–≥–æ –∏–ª–∏ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–≥–æ —Ä–∞–Ω–≥–∞.")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ–Ω–∏
        try:
            user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            user_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        
        # –°–Ω–∏–º–∞–µ–º —Ä–æ–ª—å –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–µ—Å–µ–¥–µ
        success = db.set_role(target_id, "user", peer_id)
        if success:
            self.bot.send_message(
                peer_id, 
                f"üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏\n\n"
                f"üë§ [id{target_id}|{user_name}]\n"
                f"üìù –î–µ–π—Å—Ç–≤–∏–µ: –†–æ–ª—å —Å–Ω—è—Ç–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—Ç–∞–ª –æ–±—ã—á–Ω—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –±–µ—Å–µ–¥—É
            self.bot.send_log_message(
                action="remove_role",
                admin_id=user_id,
                target_id=target_id,
                peer_id=peer_id,
                details=f"–°–Ω—è—Ç–∞ —Ä–æ–ª—å: {target_role}"
            )
        else:
            self.bot.send_message(
                peer_id, 
                f"‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å —Å–Ω—è—Ç—å —Ä–æ–ª—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id{target_id}]."
            )

    def cmd_zov(self, peer_id: int, user_id: int, args: str):
        # Mention all users in the conversation.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments
        members = self.bot.get_conversation_members(peer_id)
        
        if not members:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±–µ—Å–µ–¥—ã.")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–µ –≤—ã–∑–æ–≤–∞
        try:
            user_info = self.bot.vk.users.get(user_ids=user_id, fields='first_name,last_name')[0]
            caller_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            caller_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∫–∞–∑–∞–Ω–∞ –ª–∏ –ø—Ä–∏—á–∏–Ω–∞ –≤—ã–∑–æ–≤–∞
        reason = args.strip() if args else None
        
        # Mention up to 50 members to avoid message size limits
        mentions = []
        for member in members[:50]:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –¥–ª—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–π
            try:
                member_info = self.bot.vk.users.get(user_ids=member['id'], fields='first_name,last_name')[0]
                member_name = f"{member_info['first_name']} {member_info['last_name']}"
                mentions.append(f"[id{member['id']}|{member_name}]")
            except:
                mentions.append(f"[id{member['id']}|@id{member['id']}]")
        
        message = f"üîî –í—ã –±—ã–ª–∏ –≤—ã–∑–≤–∞–Ω—ã [id{user_id}|{caller_name}]\n\n"
        message += "üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§\n\n"
        
        if reason:
            message += f"‚ùó –ü—Ä–∏—á–∏–Ω–∞ –≤—ã–∑–æ–≤–∞: {reason}\n\n"
        
        message += f"{' '.join(mentions)}"
        
        self.bot.send_message(peer_id, message)

    def cmd_online(self, peer_id: int, user_id: int, args: str):
        # Show online users count.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments
        online_members = self.bot.get_online_members(peer_id)
        total_members = self.bot.get_conversation_members(peer_id)
        
        percent = round(len(online_members) / len(total_members) * 100) if total_members else 0
        self.bot.send_message(
            peer_id, 
            f"üü¢ –û–Ω–ª–∞–π–Ω: {len(online_members)} –∏–∑ {len(total_members)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ({percent}%)"
        )

    def cmd_onlinelist(self, peer_id: int, user_id: int, args: str):
        # List online users.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments
        online_members = self.bot.get_online_members(peer_id)
        
        if online_members:
            msg = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ–Ω–ª–∞–π–Ω:\n"
            for member in online_members:
                msg += f"[id{member['id']}|{member['first_name']} {member['last_name']}]\n"
            self.bot.send_message(peer_id, msg)
        else:
            self.bot.send_message(peer_id, "–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–Ω–ª–∞–π–Ω.")

    def cmd_banlist(self, peer_id: int, user_id: int, args: str):
        # List banned users.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments
        banned_users = db.get_banned_users()
        
        if banned_users:
            msg = "üö´ –°–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n"
            for i, user in enumerate(banned_users[:20], 1):  # Limit to 20 users
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API
                try:
                    user_info = self.bot.vk.users.get(user_ids=user['user_id'], fields='first_name,last_name')[0]
                    user_name = f"{user_info['first_name']} {user_info['last_name']}"
                except:
                    user_name = user['nickname'] or f"ID: {user['user_id']}"
                    
                ban_time = time.strftime('%d.%m.%Y –≤ %H:%M', time.localtime(user["ban_timestamp"]))
                msg += f"{i}. [id{user['user_id']}|{user_name}] - {ban_time} - {user['reason']}\n"
            
            if len(banned_users) > 20:
                msg += f"\n–ü–æ–∫–∞–∑–∞–Ω–æ 20 –∏–∑ {len(banned_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."
                
            self.bot.send_message(peer_id, msg)
        else:
            self.bot.send_message(peer_id, "‚úÖ –ù–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")

    def cmd_inactivelist(self, peer_id: int, user_id: int, args: str):
        # List inactive users.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments
        try:
            days = int(args.strip()) if args else 30
            days = max(1, days)  # Minimum 1 day
        except ValueError:
            days = 30
        
        inactive_users = db.get_inactive_users(days)
        
        if inactive_users:
            msg = f"‚è± –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–±–æ–ª–µ–µ {days} –¥–Ω–µ–π):\n\n"
            for i, user in enumerate(inactive_users[:20], 1):  # Limit to 20 users
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API
                try:
                    user_info = self.bot.vk.users.get(user_ids=user['user_id'], fields='first_name,last_name')[0]
                    user_name = f"{user_info['first_name']} {user_info['last_name']}"
                except:
                    user_name = user['nickname'] or f"ID: {user['user_id']}"
                    
                last_activity = time.strftime('%d.%m.%Y', time.localtime(user["last_activity"]))
                msg += f"{i}. [id{user['user_id']}|{user_name}] - –ø–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {last_activity}\n"
            
            if len(inactive_users) > 20:
                msg += f"\n–ü–æ–∫–∞–∑–∞–Ω–æ 20 –∏–∑ {len(inactive_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."
                
            self.bot.send_message(peer_id, msg)
        else:
            self.bot.send_message(peer_id, f"‚úÖ –ù–µ—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–±–æ–ª–µ–µ {days} –¥–Ω–µ–π).")

    def cmd_masskick(self, peer_id: int, user_id: int, args: str):
        # Mass kick users.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (space-separated user IDs)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è (—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª).")
            return
        
        target_ids = []
        for id_str in args.strip().split():
            try:
                target_id = int(id_str)
                target_ids.append(target_id)
            except ValueError:
                pass
        
        if not target_ids:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–∫–∞–∑–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return
        
        # Limit to 20 users at once
        target_ids = target_ids[:20]
        
        # Start kicking
        self.bot.send_message(peer_id, f"üîÑ –ù–∞—á–∏–Ω–∞—é –∏—Å–∫–ª—é—á–µ–Ω–∏–µ {len(target_ids)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        
        kicked_count = 0
        for target_id in target_ids:
            # Check if target is staff member
            if self.bot.check_access(target_id, "moderator") and not self.bot.check_access(user_id, "admin"):
                continue
                
            if self.bot.kick_user(peer_id, target_id):
                kicked_count += 1
        
        self.bot.send_message(
            peer_id, 
            f"‚úÖ –ò—Å–∫–ª—é—á–µ–Ω–æ {kicked_count} –∏–∑ {len(target_ids)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –±–µ—Å–µ–¥—É
        self.bot.send_log_message(
            action="masskick",
            admin_id=user_id,
            peer_id=peer_id,
            details=f"–ò—Å–∫–ª—é—á–µ–Ω–æ {kicked_count} –∏–∑ {len(target_ids)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        )

    def cmd_quiet(self, peer_id: int, user_id: int, args: str):
        # –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º "—Ç–∏—Ö–æ".
#
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
# peer_id: ID –±–µ—Å–µ–¥—ã
# user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# args: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: 
# –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –∏ —Å–æ–∑–¥–∞—Ç–µ–ª—è–º –±–µ—Å–µ–¥—ã
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–µ—Å–µ–¥—ã
        is_owner = self.bot.is_conversation_owner(peer_id, user_id)
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (–ø—Ä–æ–≤–µ—Ä–∫–∞ —É–∂–µ –≤ execute_command), 
        # –Ω–æ —è–≤–ª—è–µ—Ç—Å—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –±–µ—Å–µ–¥—ã, —Ä–∞–∑—Ä–µ—à–∞–µ–º –µ–º—É –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É
        if not self.bot.check_access(user_id, "admin") and not self.bot.check_access(user_id, "creator") and not is_owner:
            self.bot.send_message(
                peer_id, 
                f"‚ùó [id{user_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã."
            )
            return
            
        self.bot.quiet_mode = not self.bot.quiet_mode
        
        if self.bot.quiet_mode:
            self.bot.send_message(
                peer_id, 
                "üîá –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω\n\n"
                "–ë–æ—Ç –Ω–µ –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."
            )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –±–µ—Å–µ–¥—É
            self.bot.send_log_message(
                action="quiet",
                admin_id=user_id,
                peer_id=peer_id,
                details="–¢–∏—Ö–∏–π —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω"
            )
        else:
            self.bot.send_message(
                peer_id, 
                "üîä –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º –≤—ã–∫–ª—é—á–µ–Ω\n\n"
                "–ë–æ—Ç —Å–Ω–æ–≤–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã."
            )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –±–µ—Å–µ–¥—É
            self.bot.send_log_message(
                action="quiet",
                admin_id=user_id,
                peer_id=peer_id,
                details="–¢–∏—Ö–∏–π —Ä–µ–∂–∏–º –≤—ã–∫–ª—é—á–µ–Ω"
            )

    def cmd_addsenmoder(self, peer_id: int, user_id: int, args: str):
        # Add senior moderator role to a user.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (target user ID, mention or link)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É).")
            return
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ –ø—Ä–æ–±–µ–ª–∞) –¥–ª—è –ø–æ–∏—Å–∫–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        parts = args.strip().split(' ', 1)
        user_identifier = parts[0]
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
        target_id = self.bot.extract_user_id_from_mention(user_identifier)
        
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø–æ –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏, –ø—Ä–æ–±—É–µ–º –ø–æ –≤—Å–µ–π —Å—Ç—Ä–æ–∫–µ
        if not target_id:
            target_id = self.bot.extract_user_id_from_mention(args)
            
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
        
        # Make sure user exists in database
        db.add_user(target_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ–Ω–∏
        try:
            user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            user_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–æ–ª—å –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–µ—Å–µ–¥—ã
        if db.set_role(target_id, "senior_moderator", peer_id):
            self.bot.send_message(
                peer_id, 
                f"‚≠ê –ù–æ–≤—ã–π —Å—Ç–∞—Ä—à–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä\n\n"
                f"üë§ [id{target_id}|{user_name}] –Ω–∞–∑–Ω–∞—á–µ–Ω —Å—Ç–∞—Ä—à–∏–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ."
            )
            
            # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ä—à–µ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            self.bot.send_log_message(
                action="set_role",
                admin_id=user_id,
                target_id=target_id,
                peer_id=peer_id,
                details="–ù–∞–∑–Ω–∞—á–µ–Ω —Å—Ç–∞—Ä—à–∏–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º"
            )
        else:
            self.bot.send_message(
                peer_id, 
                f"‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∑–Ω–∞—á–∏—Ç—å [id{target_id}|{user_name}] —Å—Ç–∞—Ä—à–∏–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º."
            )

    def cmd_addadmin(self, peer_id: int, user_id: int, args: str):
        # Add admin role to a user.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (target user ID, mention or link)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É).")
            return
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ –ø—Ä–æ–±–µ–ª–∞) –¥–ª—è –ø–æ–∏—Å–∫–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        parts = args.strip().split(' ', 1)
        user_identifier = parts[0]
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
        target_id = self.bot.extract_user_id_from_mention(user_identifier)
        
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø–æ –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏, –ø—Ä–æ–±—É–µ–º –ø–æ –≤—Å–µ–π —Å—Ç—Ä–æ–∫–µ
        if not target_id:
            target_id = self.bot.extract_user_id_from_mention(args)
            
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
        
        # Make sure user exists in database
        db.add_user(target_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ–Ω–∏
        try:
            user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            user_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–æ–ª—å –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–µ—Å–µ–¥—ã
        if db.set_role(target_id, "admin", peer_id):
            self.bot.send_message(
                peer_id, 
                f"üëë –ù–æ–≤—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n\n"
                f"üë§ [id{target_id}|{user_name}] –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ."
            )
            
            # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            self.bot.send_log_message(
                action="set_role",
                admin_id=user_id,
                target_id=target_id,
                peer_id=peer_id,
                details="–ù–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"
            )
        else:
            self.bot.send_message(
                peer_id, 
                f"‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∑–Ω–∞—á–∏—Ç—å [id{target_id}|{user_name}] –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
            )

    def cmd_removeadmin(self, peer_id: int, user_id: int, args: str):
        # Remove admin role from a user.
#
# Args:
# peer_id: Conversation ID
# user_id: User ID
# args: Command arguments (target user ID, mention or link)
        if not args:
            self.bot.send_message(peer_id, "‚ùó –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫—É).")
            return
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ –ø—Ä–æ–±–µ–ª–∞) –¥–ª—è –ø–æ–∏—Å–∫–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        parts = args.strip().split(' ', 1)
        user_identifier = parts[0]
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
        target_id = self.bot.extract_user_id_from_mention(user_identifier)
        
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø–æ –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏, –ø—Ä–æ–±—É–µ–º –ø–æ –≤—Å–µ–π —Å—Ç—Ä–æ–∫–µ
        if not target_id:
            target_id = self.bot.extract_user_id_from_mention(args)
            
        if not target_id:
            self.bot.send_message(peer_id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, ID –∏–ª–∏ —Å—Å—ã–ª–∫—É.")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ
        user_role = db.get_role(target_id, peer_id)
        if user_role != "admin":
            self.bot.send_message(peer_id, f"‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}] –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ.")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ VK API –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ–Ω–∏
        try:
            user_info = self.bot.vk.users.get(user_ids=target_id, fields='first_name,last_name')[0]
            user_name = f"{user_info['first_name']} {user_info['last_name']}"
        except:
            user_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        
        # –°–Ω–∏–º–∞–µ–º —Ä–æ–ª—å –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–µ—Å–µ–¥–µ
        if db.set_role(target_id, "user", peer_id):
            self.bot.send_message(
                peer_id, 
                f"üîΩ –°–Ω—è—Ç–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n"
                f"üë§ [id{target_id}|{user_name}] –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ."
            )
            
            # –õ–æ–≥–∏—Ä—É–µ–º —Å–Ω—è—Ç–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            self.bot.send_log_message(
                action="remove_role",
                admin_id=user_id,
                target_id=target_id,
                peer_id=peer_id,
                details="–°–Ω—è—Ç —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
            )
        else:
            self.bot.send_message(
                peer_id, 
                f"‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å —Å–Ω—è—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id{target_id}]."
            )
